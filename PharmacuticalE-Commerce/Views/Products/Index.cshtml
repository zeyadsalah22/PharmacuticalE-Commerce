@model PaginatedList<PharmacuticalE_Commerce.Models.Product>

@{
    Layout = "_StaffManagementLayout";
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<p>
    <a asp-action="Gallery">Gallery</a>
</p>
<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            <label>Find by name: <input type="text" name="SearchString" value="@ViewData["SearchStringParm"]" /></label>
            <input type="hidden" name="categoryFilter" value="@ViewData["CategoryFilterParm"]" />
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a asp-action="Index" asp-route-categoryFilter="@ViewData["CategoryFilterParm"]">Back to Full List</a>
        </p>
    </div>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-searchString="@ViewData["SearchStringParm"]" asp-route-categoryFilter="@ViewData["CategoryFilterParm"]" asp-route-sortOrder="@ViewData["NameSortParm"]">@Html.DisplayName("Product Name")</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-searchString="@ViewData["SearchStringParm"]" asp-route-categoryFilter="@ViewData["CategoryFilterParm"]" asp-route-sortOrder="@ViewData["PriceSortParm"]">@Html.DisplayName("Price")</a>
            </th>
            <th>
                @Html.DisplayName("SerialNumber")
            </th>
            <th>
                @Html.DisplayName("Photo")
            </th>
            <th>
                @Html.DisplayName("Category Name")
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SerialNumber)
            </td>
            <td>
                <img src="@Url.Content("~/images/products/" + item.Photo)" alt="@item.Name" width="50" height="50" />
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Category.Name)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.ProductId">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.ProductId">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.ProductId">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-searchString="@ViewData["SearchStringParm"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    &lt
</a>
<span> @Model.PageIndex of @Model.TotalPages</span>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-searchString="@ViewData["SearchStringParm"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    &gt
</a>

@* <div id="ProductsListContainer">
</div>

@section Mysection {
    <script>
        $(document).ready(function () {
            loadPage(1);
        });

        function loadPage(page) {
            $.ajax({
                url: '/Products/GetProductsList',
                type: 'GET',
                data: { pageNumber: page },
                success: function (result) {
                    $('#ProductsListContainer').html(result);
                },
                error: function (error) {
                    console.log(error);
                }
            });
        }
    </script>
}
 *@